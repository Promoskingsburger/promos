"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* global Component */
var categoryMenuComponent = function (_Component) {
    _inherits(categoryMenuComponent, _Component);

    function categoryMenuComponent() {
        _classCallCheck(this, categoryMenuComponent);

        return _possibleConstructorReturn(this, (categoryMenuComponent.__proto__ || Object.getPrototypeOf(categoryMenuComponent)).apply(this, arguments));
    }

    _createClass(categoryMenuComponent, [{
        key: "getProps",
        value: function getProps() {
            return {
                category: {
                    type: Object,
                    required: true
                }
            };
        }
    }, {
        key: "data",
        value: function data() {
            return {
                selectedCategory: "",
                showMenu: "show",
                isMobile: $(window).width() <= 991
            };
        }
    }, {
        key: "getComputed",
        value: function getComputed() {
            return {
                isFolder: function isFolder() {
                    if (this.category.children) {
                        return this.category.children && this.category.children.length;
                    }
                }
            };
        }
    }, {
        key: "getMethods",
        value: function getMethods() {
            return {
                toggle: this.toggle,
                filterByCategory: this.filterByCategory,
                closeSandwichMenu: this.closeSandwichMenu
            };
        }
    }, {
        key: "toggle",
        value: function toggle() {
            if (this.isFolder) {
                this.open = !this.open;
            }
        }
    }, {
        key: "filterByCategory",
        value: function filterByCategory(storeCategory) {
            if (this.isMobile) {
                this.emitEvent('closeSandwichMenu');
            }
            if (this.$store.state.cat_selected && storeCategory.code == this.$store.state.cat_selected.code) return;
            if (storeCategory) {
                window.scrollTo(0, 0);
                this.emitEvent("close-submenu");
                var catRoutePath = storeCategory.code + "__" + storeCategory.name;
                var globalCategory = this.$store.getters.getGlobalCategories;
                var paramCategory = this.$route.params.category ? this.$route.params.category.split("__")[0] : "";
                if (globalCategory.length > 0 && this.$route.params.category && globalCategory.indexOf(storeCategory.code) == -1 && globalCategory.indexOf(paramCategory) != -1 && catRoutePath !== this.$route.params.category) {
                    this.$router.push({
                        name: 'CategorySEO',
                        params: { category: this.$route.params.category },
                        query: { category: catRoutePath }
                    });
                } else {
                    if (globalCategory.length > 0 && globalCategory.indexOf(this.$store.state.cat_selected) !== -1) {
                        this.$router.push({
                            name: 'CategorySEO',
                            params: { category: this.$route.params.category },
                            query: { category: catRoutePath }
                        });
                    } else {
                        this.$router.push({
                            name: 'CategorySEO',
                            params: { category: catRoutePath },
                            query: { category: catRoutePath }
                        });
                    }
                }
            }
        }
    }, {
        key: "closeSandwichMenu",
        value: function closeSandwichMenu() {
            if (this.isMobile) {
                $(this.$el).find('#navbarSupportedContent').collapse('hide');
            }
        }
    }, {
        key: "mounted",
        value: function mounted() {
            return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.subscribeEvent('closeSandwichMenu', this.closeSandwichMenu);

                            case 1:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return "<div class=\"item-link\">\n                    <li class=\"dropdown-item\" v-if=\"!isFolder\" @click.stop=\"filterByCategory(category)\">\n                      <span><i class=\"fas fa-angle-right\"></i> {{category.name}}</span>\n                    </li>\n                    <li v-else class=\"dropdown-item dropdown\" @click.stop=\"filterByCategory(category)\">\n                         <span class=\"\" :id=\"'navbarSubDropdown'+category.code\" data-toggle=\"dropdown\"  aria-haspopup=\"true\" aria-labelledby=\"false\">\n                              <i class=\"fas fa-angle-right\"></i>\n                              {{capitalize(category.name)}}\n                         </span>\n                         <ul :id =\"'menu'+category.code\"  class=\"dropdown-menu\" :class=\"['','category-preview',(selectedCategory == category)?showMenu:'']\" :aria-labelledby=\"'navbarSubDropdown'+category.code\">\n                            <categoryMenuComponent v-for=\"(subcat,keycat) in category.children\"\n                                           :key=\"keycat\"\n                                           :category=\"subcat\">\n                            </categoryMenuComponent>\n                         </ul>\n                    </li>\n              </div>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "categoryMenuComponent";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "categoryMenuComponent";
        }
    }]);

    return categoryMenuComponent;
}(Component);

categoryMenuComponent.registerComponent();
//# sourceMappingURL=categoryMenuComponent.js.map

"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* global Component */
var imgProxyComponent = function (_Component) {
    _inherits(imgProxyComponent, _Component);

    function imgProxyComponent() {
        _classCallCheck(this, imgProxyComponent);

        return _possibleConstructorReturn(this, (imgProxyComponent.__proto__ || Object.getPrototypeOf(imgProxyComponent)).apply(this, arguments));
    }

    _createClass(imgProxyComponent, [{
        key: "getProps",
        value: function getProps() {
            return {
                'src': {
                    type: String
                },
                'is360': {
                    type: Boolean,
                    default: false
                },
                'useZoom': {
                    type: Boolean,
                    default: false
                },
                'isthumbnails': {
                    type: Boolean,
                    default: false
                },
                'mystyle': {
                    type: String,
                    default: ''
                }, 'myclass': {
                    type: String,
                    default: ''
                }, 'eventclick': {
                    type: Function
                }, 'imgIndex': {
                    type: Number,
                    dafault: 0
                }
            };
        }
    }, {
        key: "getComputed",
        value: function getComputed() {
            return {
                render360Component: function render360Component() {
                    if (this.is360 && !this.isthumbnails) return true;
                    return false;
                },
                useZoomImage: function useZoomImage() {
                    if (this.isthumbnails) return false;
                    return this.useZoom;
                }
            };
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return "<div>\n                    <template v-if=\"render360Component\">\n                        <img360Component :src=\"src\" :mystyle=\"mystyle\"></img360Component>\n                    </template>\n                    <template v-else>\n                          <template v-if=\"useZoomImage\">\n                            <imgZoomComponent myclass=\"item-image img-fluid\" :src=\"src\" :style=\"mystyle\" :isthumbnails=\"isthumbnails\"  :imgIndex=\"imgIndex\"/>\n                          </template>  \n                          <template v-else>\n                             <imgComponent myclass=\"item-image img-fluid\" :src=\"src\" :style=\"mystyle\" :isthumbnails=\"isthumbnails\"  :imgIndex=\"imgIndex\"/>\n                          </template>\n                    </template>\n             </div>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "imgProxyComponent";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "imgProxyComponent";
        }
    }]);

    return imgProxyComponent;
}(Component);

imgProxyComponent.registerComponent();
//# sourceMappingURL=imgProxyComponent.js.map

"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var categorySectionComponent = function (_Component) {
    _inherits(categorySectionComponent, _Component);

    function categorySectionComponent() {
        _classCallCheck(this, categorySectionComponent);

        return _possibleConstructorReturn(this, (categorySectionComponent.__proto__ || Object.getPrototypeOf(categorySectionComponent)).apply(this, arguments));
    }

    _createClass(categorySectionComponent, [{
        key: "getProps",
        value: function getProps() {
            return ['selectCategory', "displayCategory", "open_by_default"];
        }
    }, {
        key: "data",
        value: function data() {
            return {
                display: {
                    categories: true,
                    prices: true,
                    filterHistory: true
                }
            };
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return " <section>\n                    <template v-for=\"filter of $store.getters.getItemFilters.filter((x)=>{return x.fields.FilterActived})\">\n                        <filterProxyComponent :filterField=\"filter.fields\" :open_by_default=\"open_by_default\"></filterProxyComponent>\n                    </template>\n                </section>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "categorySectionComponent";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "categorySectionComponent";
        }
    }]);

    return categorySectionComponent;
}(Component);

categorySectionComponent.registerComponent();
//# sourceMappingURL=categorySectionComponent.js.map

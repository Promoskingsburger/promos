'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* global Component, axios */
var redirectPaymentComponent = function (_Component) {
    _inherits(redirectPaymentComponent, _Component);

    function redirectPaymentComponent() {
        _classCallCheck(this, redirectPaymentComponent);

        return _possibleConstructorReturn(this, (redirectPaymentComponent.__proto__ || Object.getPrototypeOf(redirectPaymentComponent)).apply(this, arguments));
    }

    _createClass(redirectPaymentComponent, [{
        key: 'getProps',
        value: function getProps() {
            return ['PayTermObj', 'SO'];
        }
    }, {
        key: 'data',
        value: function data() {
            return {
                text: '',
                errorMsg: ''
            };
        }
    }, {
        key: 'getTemplate',
        value: function getTemplate() {
            return '\n        <button class="btn btn-primary" type="button" disabled>\n            <div v-if=\'!errorMsg\'>\n                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>\n                {{text}}\n            </div>\n            <span v-else>{{tr(errorMsg)}}</span>\n        </button>';
        }
    }, {
        key: 'mounted',
        value: function mounted() {
            return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var res;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.text = this.tr(["Redirecting to {{$1}}", this.PayTermObj.fields.PayTermName]);
                                _context.next = 3;
                                return axios.post(this.PayTermObj.fields.OppenRedirectEndPoint, {
                                    SerNr: this.SO
                                });

                            case 3:
                                res = _context.sent;

                                if (!res.data.ok || !res.data.url) this.errorMsg = res.res || 'There was an error generating the Payment';else window.open(res.data.url, '_self');

                            case 5:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));
        }
    }], [{
        key: 'name',
        value: function name() {
            return "redirectPaymentComponent";
        }
    }, {
        key: 'componentName',
        value: function componentName() {
            return "redirectPaymentComponent";
        }
    }]);

    return redirectPaymentComponent;
}(Component);

redirectPaymentComponent.registerComponent();
//# sourceMappingURL=redirectPaymentComponent.js.map

"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/*  global Component */
var CenterCostActionsComponent = function (_Component) {
    _inherits(CenterCostActionsComponent, _Component);

    function CenterCostActionsComponent() {
        _classCallCheck(this, CenterCostActionsComponent);

        return _possibleConstructorReturn(this, (CenterCostActionsComponent.__proto__ || Object.getPrototypeOf(CenterCostActionsComponent)).apply(this, arguments));
    }

    _createClass(CenterCostActionsComponent, [{
        key: "getProps",
        value: function getProps() {
            return ['data', 'index', 'column'];
        }
    }, {
        key: "getComputed",
        value: function getComputed() {
            return {
                session: function session() {
                    return this.$store.getters.getSession;
                },
                currentCustomerPerson: function currentCustomerPerson() {
                    return this.$store.getters.getCurrentCustomerPerson;
                }
            };
        }
    }, {
        key: "getMethods",
        value: function getMethods() {
            return {
                editRecord: this.editRecord,
                removeRecord: this.removeRecord
            };
        }
    }, {
        key: "editRecord",
        value: function () {
            var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                var oppenRecord;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                _context.next = 2;
                                return axios.get('/ecommerce/api/getCenterCost?detail=' + this.data.Code);

                            case 2:
                                oppenRecord = _context.sent;

                                //console.log('Edit CC', this.data,oppenRecord);
                                this.emitEvent("editCenterCost", oppenRecord.data.centerCost);

                            case 4:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            function editRecord() {
                return _ref.apply(this, arguments);
            }

            return editRecord;
        }()
    }, {
        key: "removeRecord",
        value: function removeRecord() {
            this.emitEvent("deleteCenterCost", this.data);
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return "<div :key=\"'cca-'+data.Code\" class=\"custom-actions\">\n                  <a :key=\"'edit-ccb-'+data.Code\"  :title=\"tr('Edit')\" class=\"col-sm-5\" data-toggle=\"modal\" data-target=\"#centerCostModal\"  @click=\"editRecord\">\n                     <i class=\"fas fa-edit\"></i>\n                  </a>\n                  <a :key=\"'delete-ccb-'+data.Code\"  :title=\"tr('Delete')\" class=\"col-sm-5\" @click=\"removeRecord\">\n                    <i class=\"fas fa-trash\"></i>\n                  </a>\n               </div>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "centerCostActionsComponent";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "centerCostActionsComponent";
        }
    }]);

    return CenterCostActionsComponent;
}(Component);

CenterCostActionsComponent.registerComponent();
//# sourceMappingURL=centerCostActionsComponent.js.map

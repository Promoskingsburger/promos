"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var customerGiftsListComponent = function (_Component) {
    _inherits(customerGiftsListComponent, _Component);

    function customerGiftsListComponent() {
        _classCallCheck(this, customerGiftsListComponent);

        return _possibleConstructorReturn(this, (customerGiftsListComponent.__proto__ || Object.getPrototypeOf(customerGiftsListComponent)).apply(this, arguments));
    }

    _createClass(customerGiftsListComponent, [{
        key: "data",
        value: function data() {
            return {
                viewmode: 'module',
                itemsFlag: false,
                orderSelected: "",
                GiftsItemList: []
            };
        }
    }, {
        key: "mounted",
        value: function mounted() {
            return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
                return regeneratorRuntime.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                this.fetchData();

                            case 1:
                            case "end":
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));
        }
    }, {
        key: "getWatch",
        value: function getWatch() {
            return {
                '$store.state.appState': 'fetchData',
                '$store.state.customerGifts': 'fetchData',
                '$store.state.orderBy': 'fetchData',
                '$store.state.orderDirection': 'fetchData'
            };
        }
    }, {
        key: "getComputed",
        value: function getComputed() {
            return {
                initItem: function initItem() {
                    return this.$store.getters.getItemPerPage * this.$store.getters.getOffset;
                },
                lastItem: function lastItem() {
                    return this.$store.getters.getItemPerPage * this.$store.getters.getOffset + this.$store.getters.getItemPerPage;
                },
                moduleObject: function moduleObject() {
                    return {
                        'green-text': this.viewmode == 'module'
                    };
                },
                listObject: function listObject() {
                    return {
                        'green-text': this.viewmode == 'list'
                    };
                }
            };
        }
    }, {
        key: "getMethods",
        value: function getMethods() {
            return {
                fetchData: this.fetchData,
                openItemView: this.openItemView,
                reorderItems: this.reorderItems,
                getItemByCode: this.getItemByCode
            };
        }
    }, {
        key: "fetchData",
        value: function fetchData() {
            this.GiftsItemList = [];
            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = this.$store.getters.getCustomerGifts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var itemCode = _step.value;

                    var itemLoad = this.$store.getters.getItemByCode(itemCode);
                    if (itemLoad) this.GiftsItemList.push(itemLoad);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            this.GiftsItemList = __lodash__.orderBy(this.GiftsItemList, this.$store.getters.getOrderBy, this.$store.getters.getOrderDirection);
        }
    }, {
        key: "openItemView",
        value: function openItemView(item) {
            if (item) this.$router.push("/view/" + item.Code);
        }
    }, {
        key: "reorderItems",
        value: function reorderItems() {
            this.$store.dispatch('reorderItems', this.orderSelected);
            //this.GiftsItemList = __lodash__.orderBy(this.GiftsItemList,this.$store.state.orderBy,'asc');
        }
    }, {
        key: "getItemByCode",
        value: function getItemByCode(itemCode) {
            return this.$store.getters.getItemByCode(itemCode);
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return "<div class=\"produktliste\">\n                    <div class=\"header-produktliste\">\n                        <h4>{{tr('Customer Gifts')}} ({{GiftsItemList.length}})</h4>\n                        <div class=\"items-options\">\n                        <div class=\"order-options\">\n                            <span>{{tr('Order by')}}</span>\n                            <select id=\"soflow\" v-model=\"orderSelected\" class=\"minimal browser-default\" @change=\"reorderItems\">\n                                <option disabled value=\"\">{{tr('Select One')}}</option>\n                                <template v-for=\"orderField of store.getters.getSetting.ItemOrdered\">\n                                    <option :value=\"orderField.fields.internalId\" :selected=\"orderField==orderSelected\">{{tr(orderField.fields.ItemField)}}({{orderField.fields.OrderDirection}})</option>\n                                </template>\n                            </select>\n                        </div>\n                        <div class=\"view-options\">\n                            <span @click=\"viewmode='module'\" v-bind:class=\"moduleObject\">\n                                <span>Mosaico</span>\n                                <i class=\"fas fa-th-large fa-1x\"></i>\n                                <!--<img src=\"../static/ecommerce/assets/img/mosaico.jpg\" width=\"20\" height=\"22\" alt=\"\">-->\n                            </span>\n                            <span @click=\"viewmode='list'\" v-bind:class=\"listObject\">\n                                <span >Lista</span>\n                                <i class=\"fas fa-list-alt fa-1x\"></i>\n                                <!--<img src=\"../static/ecommerce/assets/img/list.jpg\" width=\"21\" height=\"22\" alt=\"\">-->\n                            </span>\n                        </div>\n                        <template v-if=\"GiftsItemList.length>0\">\n                            <paginationComponent currentView=\"customerGifts\"></paginationComponent>\n                        </template>\n                    </div>\n                    <div class=\"produktliste\">\n                         <template v-if=\"$store.getters.getAppState!='ready'\">\n                                <template v-if=\"filteredItems.length==0\">\n                                    <div class=\"container center section white\" >\n                                        <h3>{{tr('Please wait. Loading ...')}}</h3>\n                                    </div>\n                                </template>\n                         </template>\n                         <template v-else>\n                            <template v-if=\"GiftsItemList.length>0\">\n                                <template v-for=\"item in GiftsItemList.slice(initItem,lastItem)\">\n                                    <div :class=\"{col:true, 's12': viewmode=='list', 's6 m6 l3': viewmode=='module'}\" >\n                                          <template v-if=\"viewmode=='list'\">\n                                              <itemViewListComponent :item=\"item\" ></itemViewListComponent>\n                                          </template>\n                                          <template v-else>\n                                              <itemViewModuleComponent :item=\"item\" ></itemViewModuleComponent>\n                                          </template>\n                                    </div>\n                                </template>\n                            <template v-else>\n                                <template v-if=\"filteredItems.length==0\">\n                                    <div class=\"container center section white\" >\n                                        <h3>{{tr('No items was found')}}</h3>\n                                    </div>\n                                </template>\n                            </template>\n                        </template>\n                    </div>\n            </div>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "customerGiftsListComponent";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "customerGiftsListComponent";
        }
    }]);

    return customerGiftsListComponent;
}(Component);

customerGiftsListComponent.registerComponent();
//# sourceMappingURL=customerGiftsListComponent.js.map

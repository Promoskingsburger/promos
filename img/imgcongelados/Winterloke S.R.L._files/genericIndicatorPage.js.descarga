"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var genericIndicatorPage = function (_Component) {
    _inherits(genericIndicatorPage, _Component);

    function genericIndicatorPage() {
        _classCallCheck(this, genericIndicatorPage);

        return _possibleConstructorReturn(this, (genericIndicatorPage.__proto__ || Object.getPrototypeOf(genericIndicatorPage)).apply(this, arguments));
    }

    _createClass(genericIndicatorPage, [{
        key: "getTemplate",
        value: function getTemplate() {
            return "<div class=\"indicatorPage\"> \n                  <div :class=\"classContainer\">\n                      <div class=\"row justify-content-center section main\">\n                          <template v-if=\"$store.getters.getAppState=='ready'\">\n                            <div class=\"section white\">\n                                <div class=\"container\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12\">\n                                             <template v-for=\"indicator of $store.getters.getIndicators\">\n                                                <indicator-component :indicator=\"indicator\">\n                                                    <template slot=\"parameters\" scope=\"reportScope\">\n                                                        <genericIndicatorForm :reportScope=\"reportScope\" :reportName=\"indicator.fields.ReportName\" ></genericIndicatorForm>\n                                                    </template>\n                                                </indicator-component>  \n                                             </template>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                          </template>\n                          <template v-else>\n                            <div class=\"container center section white\" style=\"min-height: 60%;\" >\n                               <h3>{{tr('Page loading please wait')}}</h3>\n                             </div>\n                          </template>\n                      </div>\n                  <div>\n              </div>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "genericIndicatorPage";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "genericIndicatorPage";
        }
    }]);

    return genericIndicatorPage;
}(Component);

genericIndicatorPage.registerComponent();
//# sourceMappingURL=genericIndicatorPage.js.map

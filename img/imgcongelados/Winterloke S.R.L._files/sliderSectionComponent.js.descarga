"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var sliderSectionComponent = function (_Component) {
    _inherits(sliderSectionComponent, _Component);

    function sliderSectionComponent() {
        _classCallCheck(this, sliderSectionComponent);

        return _possibleConstructorReturn(this, (sliderSectionComponent.__proto__ || Object.getPrototypeOf(sliderSectionComponent)).apply(this, arguments));
    }

    _createClass(sliderSectionComponent, [{
        key: "getProps",
        value: function getProps() {
            return ['items', 'config'];
        }
    }, {
        key: "data",
        value: function data() {
            return {
                hasMobileBanner: false,
                isMobile: $(window).width() <= 991
            };
        }
    }, {
        key: "mounted",
        value: function mounted() {
            return function () {
                var _this2 = this;

                this.$nextTick(function () {
                    var searchOnlyMobileImage = _this2.items.findIndex(function (item, index) {
                        return item.fields.OnlyMobile == true;
                    });
                    _this2.hasMobileBanner = searchOnlyMobileImage != -1 && _this2.isMobile;

                    $(_this2.$refs[_this2.UIComponentID]).carousel();
                });
            };
        }
    }, {
        key: "updated",
        value: function updated() {
            return function () {
                $(this.$refs[this.UIComponentID]).find('.carousel-item:first-child').addClass('active');
                $(this.$refs[this.UIComponentID]).carousel("cycle");
            };
        }
    }, {
        key: "getMethods",
        value: function getMethods() {
            return {
                isAppRouter: this.isAppRouter,
                itemCarouselMove: this.itemCarouselMove
            };
        }
    }, {
        key: "isAppRouter",
        value: function isAppRouter(item) {
            //console.log('APP LINK ',item.fields.ItemLink);
            if (item.fields.ItemLink && item.fields.ItemLink.length > 0 && (item.fields.ItemLink[0] === '#' || item.fields.ItemLink[0] === '/' || item.fields.ItemLink[0] === '.')) return true;
            return false;
        }
    }, {
        key: "itemCarouselMove",
        value: function itemCarouselMove(direction) {
            $(this.$refs[this.UIComponentID]).carousel(direction);
        }
    }, {
        key: "getTemplate",
        value: function getTemplate() {
            return "<div class=\"justify-content-center mt-1 mb-1\" style=\"margin:auto\" >\n                    <div :ref=\"UIComponentID\" :id=\"UIComponentID\" class=\"carousel slide carousel-fade sliderSectionComponent\"  data-ride=\"carousel\" >\n                        <div class=\"carousel-inner\">\n                           <template v-for=\"(item,index) in items\">\n                               <template v-if=\"item.fields.ItemPhotoUri\">\n                                    <template v-if=\"(!hasMobileBanner && !item.fields.OnlyMobile) || (hasMobileBanner && item.fields.OnlyMobile)\">\n                                        <div class=\"carousel-item\"  :class=\"{active:index==0} \":href=\"item.fields.ItemLink\">\n                                        <template v-if=\"item.fields.ItemLink\">\n                                            <template v-if=\"isAppRouter(item)\">\n                                                <router-link :to=\"item.fields.ItemLink.replace('#','')\" >\n                                                        <img :src=\"item.fields.ItemPhotoUri\" alt=\"Sider\" class=\"d-block\">\n                                                </router-link>\n                                            </template>\n                                            <template v-else>\n                                                    <a target=\"_blank\" :href=\"item.fields.ItemLink\" >\n                                                        <img :src=\"item.fields.ItemPhotoUri\" alt=\"Sider\" class=\"d-block\" >\n                                                    </a>\n                                            </template>\n                                        </template>\n                                        <template v-else>\n                                                <img :src=\"item.fields.ItemPhotoUri\" alt=\"Sider\" class=\"d-block\">\n                                        </template>\n                                        </div>\n                                    </template>\n                               </template>\n                           </template>\n                        </div>\n\n                        <template v-if=\"items.length > 1\">\n                            <a class=\"carousel-control-prev\" :href=\"'#'+UIComponentID\" role=\"button\" data-slide=\"prev\" @click.prevent=\"itemCarouselMove('prev')\">\n                                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                <span class=\"sr-only\">Previous</span>\n                            </a>\n                            <a class=\"carousel-control-next\" :href=\"'#'+UIComponentID\" role=\"button\" data-slide=\"next\" @click.prevent=\"itemCarouselMove('next')\">\n                                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                <span class=\"sr-only\">Next</span>\n                            </a>\n                        </template>\n                    </div>\n                </div>";
        }
    }], [{
        key: "name",
        value: function name() {
            return "sliderSectionComponent";
        }
    }, {
        key: "componentName",
        value: function componentName() {
            return "sliderSectionComponent";
        }
    }]);

    return sliderSectionComponent;
}(Component);

sliderSectionComponent.registerComponent();
//# sourceMappingURL=sliderSectionComponent.js.map
